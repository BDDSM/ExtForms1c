
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УМеняЕстьПервоеСлагаемоеРавное(Парам01)","УМеняЕстьПервоеСлагаемоеРавное","Допустим У меня есть первое слагаемое равное 5","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"УМеняЕстьВтороеСлагаемоеРавное(Парам01)","УМеняЕстьВтороеСлагаемоеРавное","И У меня есть второе слагаемое равное 20.5","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"РезультатСложенияРавен(Парам01)","РезультатСложенияРавен","Тогда Результат сложения равен 25.5","","");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим У меня есть первое слагаемое равное 5
//@УМеняЕстьПервоеСлагаемоеРавное(Парам01)
Процедура УМеняЕстьПервоеСлагаемоеРавное(ПервоеСлагаемое) Экспорт
	Контекст.Вставить("ПервоеСлагаемое", ПервоеСлагаемое);
КонецПроцедуры

&НаКлиенте
//И У меня есть второе слагаемое равное 20.5
//@УМеняЕстьВтороеСлагаемоеРавное(Парам01)
Процедура УМеняЕстьВтороеСлагаемоеРавное(ВтороеСлагаемое) Экспорт
	Контекст.Вставить("ВтороеСлагаемое", ВтороеСлагаемое);
КонецПроцедуры

&НаКлиенте
//Тогда Результат сложения равен 25.5
//@РезультатСложенияРавен(Парам01)
Процедура РезультатСложенияРавен(ОжидаемыйРезультат) Экспорт
	
	Расчет = СервисныеМеханизмы.СложитьДваЧисла(Контекст.ПервоеСлагаемое, Контекст.ВтороеСлагаемое);
	
	Если Расчет <> ОжидаемыйРезультат Тогда
		ВызватьИсключение "";
	КонецЕсли;
	
КонецПроцедуры
