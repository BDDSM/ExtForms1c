
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура СформироватьОтчет(Команда)
	
	СформироватьОчетНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОчетНаСервере()
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	СтруктураНастроек = ПолучитьСтруктуруНастроекФормыДляЗаписи();
	МассивИменРолей = ПолучитьМассивИменРолейПоНастройкам(ОтчетОбъект, СтруктураНастроек);
	
	ТабДок = ОтчетОбъект.ВывестиОтчетВТабличныйДокумент(МассивИменРолей, СтруктураНастроек);
	
	ПолеОтчета.Очистить();
	ПолеОтчета.Вывести(ТабДок);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьВФайлНаСервере(ПутьКФайлу)
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	СтруктураНастроек = ПолучитьСтруктуруНастроекФормыДляЗаписи();
	СтруктураНастроек.Вставить("ПутьКФайлу", ПутьКФайлу);
	МассивИменРолей = ПолучитьМассивИменРолейПоНастройкам(ОтчетОбъект, СтруктураНастроек);
	
	ОтчетОбъект.ВывестиОтчетВXML(МассивИменРолей, СтруктураНастроек);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВФайл(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.Заголовок = НСтр("ru = 'Выбор файла выгрузки'");
	Диалог.Фильтр = НСтр("ru = 'Файлы выгрузки (*.xml)|*.xml|Все файлы (*.*)|*.*'");
	Оповещение = Новый ОписаниеОповещения("ОкончаниеВыбораФайлаСохранения", ЭтотОбъект);
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораФайлаСохранения(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		СохранитьВФайлНаСервере(Результат[0]);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьИзФайлаНаСервере(ПутьКФайлу)
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	СтруктураНастроек = Новый Структура("ПутьКФайлу", ПутьКФайлу);
	
	ПрочитаннаяСтруктураОтчета = ОтчетОбъект.ПрочитатьОтчетИзФайлаXML(СтруктураНастроек);
	
	Если ПрочитаннаяСтруктураОтчета <> Неопределено Тогда
		
		СтруктураНастроек = ПрочитаннаяСтруктураОтчета.СтруктураНастроек;
		ЗаполнитьНастройкиФормыИзСтруктуры(СтруктураНастроек);
		
		ПолеОтчета.Очистить();
		ПолеОтчета.Вывести(ПрочитаннаяСтруктураОтчета.ТабДок);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИзФайла(Команда)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Заголовок = НСтр("ru = 'Выбор файла выгрузки'");
	Диалог.Фильтр = НСтр("ru = 'Файлы выгрузки (*.xml)|*.xml|Все файлы (*.*)|*.*'");
	Оповещение    = Новый ОписаниеОповещения("ОкончаниеВыбораФайлаОткрытие", ЭтотОбъект);
	Диалог.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОкончаниеВыбораФайлаОткрытие(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено И Результат.Количество() > 0 Тогда
		ПрочитатьИзФайлаНаСервере(Результат[0]);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТКА ДАННЫХ ФОРМЫ

// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ЗаполнитьНастройкиФормыИзСтруктуры(СтрПарам)
	
	НеВыводитьОбъектБезПрав = СтрПарам.НеВыводитьОбъектБезПрав;
	ПользовательИБ = СтрПарам.ПользовательИБ;
	РольРеквизит = СтрПарам.РольРеквизит;
	ТипПолномочия = СтрПарам.ТипПолномочия;
	
	СписокРолейРеквизит.Очистить();
	ТабРолей = СтрПарам.СписокРолейРеквизит;
	Для Каждого ЭлементСписка Из ТабРолей Цикл
		СписокРолейРеквизит.Добавить(ЭлементСписка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруНастроекФормыДляЗаписи()
	
	СтрПарам = Новый Структура();
	СтрПарам.Вставить("НеВыводитьОбъектБезПрав", НеВыводитьОбъектБезПрав);
	СтрПарам.Вставить("ПользовательИБ", ПользовательИБ);
	СтрПарам.Вставить("РольРеквизит", РольРеквизит);
	СтрПарам.Вставить("ТипПолномочия", ТипПолномочия);
	
	ТабРоли = Новый ТаблицаЗначений;
	ТабРоли.Колонки.Добавить("Значение");
	ТабРоли.Колонки.Добавить("Представление");
	ТабРоли.Колонки.Добавить("Пометка");
	Для Каждого ЭлементСписка Из СписокРолейРеквизит Цикл
		ЗаполнитьЗначенияСвойств(ТабРоли.Добавить(), ЭлементСписка);
	КонецЦикла;
	СтрПарам.Вставить("СписокРолейРеквизит", ТабРоли);
	
	Возврат СтрПарам;
	
КонецФункции

&НаСервере
Функция ПолучитьМассивИменРолейПоНастройкам(ОтчетОбъект, СтруктураНастроек)
	
	МассивИменРолей = Новый Массив;
	
	Если СтруктураНастроек.ТипПолномочия = "Роль" Тогда
		
		Если НЕ ЗначениеЗаполнено(СтруктураНастроек.РольРеквизит) Тогда
			ВывестиСообщениеПользователю(НСтр("ru = 'Не выбрана роль!'"), "РольРеквизит");
			Возврат Неопределено;
		КонецЕсли;
		
		МассивИменРолей.Добавить(СтруктураНастроек.РольРеквизит);
		
	ИначеЕсли СтруктураНастроек.ТипПолномочия = "Роли" Тогда
		
		Для Каждого ЭлементСписка Из СтруктураНастроек.СписокРолейРеквизит Цикл
			Если ЭлементСписка.Пометка Тогда
				МассивИменРолей.Добавить(ЭлементСписка.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Если МассивИменРолей.Количество() = 0 Тогда
			ВывестиСообщениеПользователю(НСтр("ru = 'Не выбрано ни одной роли!'"), "СписокРолейРеквизит");
			Возврат Неопределено;
		КонецЕсли;
		
	ИначеЕсли СтруктураНастроек.ТипПолномочия = "Пользователь" Тогда
		
		Если НЕ ЗначениеЗаполнено(СтруктураНастроек.ПользовательИБ) Тогда
			ВывестиСообщениеПользователю(НСтр("ru = 'Не выбран пользователь!'"), "ПользовательИБ");
			Возврат Неопределено;
		КонецЕсли;
		
		метаПользователь = ОтчетОбъект.ПолучитьПользователяИБПоИмени(СтруктураНастроек.ПользовательИБ);
		Для Каждого ТекРоль Из метаПользователь.Роли Цикл
			МассивИменРолей.Добавить(ТекРоль.Имя);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивИменРолей;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ОбновитьОтображениеГиперссылки()
	
	КолРолей = 0;
	СтрРоли = "";
	Для Каждого ЭлементСписка Из СписокРолейРеквизит Цикл
		Если ЭлементСписка.Пометка Тогда
			СтрРоли = СтрРоли + ", " + ЭлементСписка.Значение;
			КолРолей = КолРолей + 1;
		КонецЕсли;
	КонецЦикла;
	СтрРоли = Сред(СтрРоли,3);
	
	Если КолРолей > 0 Тогда
		Элементы.ГиперрссылкаВыборРолей.Заголовок = "("+КолРолей+") "+?(СтрДлина(СтрРоли)>90, Лев(СтрРоли, 87)+"...", СтрРоли);
	Иначе
		Элементы.ГиперрссылкаВыборРолей.Заголовок = "Не выбрано ни одной роли";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииТипаПолномочия()
	
	ЭтоРоль = (ТипПолномочия = "Роль");
	ЭтоРоли = (ТипПолномочия = "Роли");
	ЭтоПользователь = (ТипПолномочия = "Пользователь");
	
	Элементы.РольРеквизит.Видимость = ЭтоРоль;
	Элементы.ГиперрссылкаВыборРолей.Видимость = ЭтоРоли;
	Элементы.ПользовательИБ.Видимость = ЭтоПользователь;
	
	ОбновитьОтображениеГиперссылки();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВывестиСообщениеПользователю(ТекстСообщения, ИмяПоля)
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Поле = ИмяПоля;
	Сообщение.Сообщить();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ И ЭЛЕМЕНТОВ ДИАЛОГА

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтчетОбъект = РеквизитФормыВЗначение("Отчет");
	СписокРолей = ОтчетОбъект.ПолучитьСписокРолей();
	СписокПользователей = ОтчетОбъект.ПолучитьСписокПользователейИБ();
	ОтчетОбъект.ПроверитьВерсиюПлатформыПриЗапуске(Отказ);
	ЗаполнитьЗначенияСвойств(Отчет, ОтчетОбъект, "ВерсияПлатформы8_3,ВерсияПлатформы8_3_3,ВерсияПлатформы8_3_6");
	
	Элементы.РольРеквизит.СписокВыбора.Очистить();
	СписокРолейРеквизит.Очистить();
	Для Каждого ЭлементСписка Из СписокРолей Цикл
		Элементы.РольРеквизит.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		СписокРолейРеквизит.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
	Элементы.ПользовательИБ.СписокВыбора.Очистить();
	Для Каждого ЭлементСписка Из СписокПользователей Цикл
		Элементы.ПользовательИБ.СписокВыбора.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
	КонецЦикла;
	
	ТипПолномочия = "Роль";
	ПриИзмененииТипаПолномочия();
	
КонецПроцедуры

&НаКлиенте
Процедура ТипПолномочияПриИзменении(Элемент)
	
	ПриИзмененииТипаПолномочия();
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперрссылкаВыборРолейНажатие(Элемент)
	
	Если Отчет.ВерсияПлатформы8_3_3 Тогда
		
		Выполнить("СписокРолейРеквизит.ПоказатьОтметкуЭлементов(Новый ОписаниеОповещения(""ГиперрссылкаВыборРолейНажатиеЗавершение"", ЭтаФорма), ""Выбор ролей для отчета"");");
		
	ИначеЕсли СписокРолейРеквизит.ОтметитьЭлементы("Выбор ролей для отчета") Тогда
		
		ОбновитьОтображениеГиперссылки();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперрссылкаВыборРолейНажатиеЗавершение(Список, ДополнительныеПараметры) Экспорт
	
	//Если Список Тогда
		ОбновитьОтображениеГиперссылки();
	//КонецЕсли;
	
КонецПроцедуры
